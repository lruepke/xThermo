# Using OpenMP
if(USE_OMP)
    if(EXISTS /opt/homebrew/Cellar/libomp/16.0.4/include)
        include_directories(/opt/homebrew/Cellar/libomp/16.0.4/include)
        link_directories(/opt/homebrew/Cellar/libomp/16.0.4/lib)
    endif()
    if (EXISTS /usr/local/include)
        include_directories(/usr/local/include)
    endif ()
    if (EXISTS /opt/local/include)
        include_directories(/opt/local/include)
    endif ()
    if (EXISTS /usr/local/lib)
        link_directories(/usr/local/lib)
    endif ()
    if (EXISTS /opt/local/lib)
        link_directories(/opt/local/lib)
    endif ()
  if(APPLE)
      set(CMAKE_C_COMPILER clang)
      set(CMAKE_CXX_COMPILER clang++)

      if(CMAKE_C_COMPILER_ID MATCHES "Clang\$")
          set(OpenMP_C_FLAGS "-Xpreprocessor -fopenmp")
          set(OpenMP_C_LIB_NAMES "omp")
          set(OpenMP_omp_LIBRARY omp)
      endif()

      if(CMAKE_CXX_COMPILER_ID MATCHES "Clang\$")
          set(OpenMP_CXX_FLAGS "-Xpreprocessor -fopenmp")
          set(OpenMP_CXX_LIB_NAMES "omp")
          set(OpenMP_omp_LIBRARY omp)
      endif()
  endif()
  find_package(OpenMP REQUIRED)
  if(OPENMP_FOUND)
    message(STATUS "OPENMP FOUND")
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
    message(STATUS "OpenMP lib names: " ${OpenMP_CXX_LIB_NAMES})
    message(STATUS "OpenMP libs: " ${OpenMP_CXX_LIBRARIES})
    message(STATUS "OpenMP include dir: " ${OpenMP_CXX_INCLUDE_DIRS})
    # look for omp lib from OpenMP_CXX_LIBRARIES and check if the static lib exists
    foreach(OpenMP_CXX_LIB IN LISTS  OpenMP_CXX_LIBRARIES )
        if("${OpenMP_CXX_LIB}" MATCHES "omp")
            message(STATUS "found omp lib")
            get_filename_component(OpenMP_LIB_PATH ${OpenMP_CXX_LIB} DIRECTORY)
            get_filename_component(OpenMP_LIB_NAME ${OpenMP_CXX_LIB} NAME_WE)
            set(OpenMP_STATIC_LIB "${OpenMP_LIB_PATH}/${OpenMP_LIB_NAME}.a")
            if (EXISTS ${OpenMP_STATIC_LIB})
                message(STATUS "Static omp lib: " ${OpenMP_STATIC_LIB})
                set(LIBomp_static ${OpenMP_STATIC_LIB})
            endif ()
            break()
        endif()
    endforeach()
  endif()
  #windows vs2017 doesn't need opm library link 
  set(LIBomp "")
  if (APPLE)
    set(LIBomp "omp")
  endif()
  add_definitions(-DUSE_OMP=1)
  set(LIB_NAME "${PROJECT_NAME}_par")
else()
  set(LIB_NAME "${PROJECT_NAME}")
endif()